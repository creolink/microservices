version: "2"
services:

    web:
        container_name: ${NGINX_HOST}
        image: web/nginx
        build:
            context: ./containers/nginx/
            dockerfile: Dockerfile
        env_file:
            - "variables.env"
        volumes:
            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        extra_hosts:
            - "$NGINX_HOST1:$IP_WEB1"
            - "$NGINX_HOST2:$IP_WEB2"
        restart: always

    web1:
        container_name: ${NGINX_HOST1}
        image: web/nginx
        extends: web
        volumes:
            - "../$APP1:/var/www/html"
        networks:
            default:
                ipv4_address: ${IP_WEB1}
        environment:
            - NGINX_HOST=${NGINX_HOST1}
            - PHP_FPM=${PHP_FPM1}
        command: /bin/sh -c "envsubst '$$NGINX_HOST $$PHP_FPM' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        depends_on:
            - web
            - ${PHP_FPM1}
#            - mysqldb

    web2:
        container_name: ${NGINX_HOST2}
        image: web/nginx
        extends: web
        volumes:
            - "../$APP2:/var/www/html"
        networks:
            default:
                ipv4_address: ${IP_WEB2}
        environment:
            - NGINX_HOST=${NGINX_HOST2}
            - PHP_FPM=${PHP_FPM2}
        command: /bin/sh -c "envsubst '$$NGINX_HOST $$PHP_FPM' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        depends_on:
            - web
            - ${PHP_FPM2}
#            - mysqldb

    php:
        container_name: ${PHP_FPM}
        image: web/php
        build:
            context: ./containers/php/
            dockerfile: Dockerfile
        env_file:
            - "variables.env"
        restart: always
        extra_hosts:
            - "$NGINX_HOST1:$IP_WEB1"
            - "$NGINX_HOST2:$IP_WEB2"
        volumes:
            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"

    php1:
        container_name: ${PHP_FPM1}
        image: web/php
        extends: php
        volumes:
            - "../$APP1:/var/www/html"
        depends_on:
            - php

    php2:
        container_name: ${PHP_FPM2}
        image: web/php
        extends: php
        volumes:
            - "../$APP2:/var/www/html"
        depends_on:
            - php

#    application:
#        container_name: application
#        image: web1/application
#        build:
#            context: ./containers/application/
#            dockerfile: Dockerfile
#        volumes:
#            - "../application:/var/www/html"
#        command: folders.sh
#        depends_on:
#            - php
#            - web1
#            - composer

    composer:
        container_name: composer
        image: "composer"
        env_file:
            - "variables.env"

    composer1:
        container_name: composer1
        extends: composer
        volumes:
            - "../$APP1:/app"
        command: install
        depends_on:
            - php1
            - web1

    composer2:
        container_name: composer2
        extends: composer
        volumes:
            - "../$APP2:/app"
        command: install
        depends_on:
            - php2
            - web2

#    myadmin:
#        container_name: myadmin
#        image: phpmyadmin/phpmyadmin
#        container_name: phpmyadmin
#        ports:
#            - "8080:80"
#        environment:
#            - PMA_ARBITRARY=1
#            - PMA_HOST=${MYSQL_HOST}
#        restart: always
#        depends_on:
#            - mysqldb

#    mysqldb:
#        container_name: mysql
#        image: mysql
#        container_name: ${MYSQL_HOST}
#        restart: always
#        env_file:
#            - "variables.env"
#        environment:
#            - MYSQL_DATABASE=${MYSQL_DATABASE}
#            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#            - MYSQL_USER=${MYSQL_USER}
#            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#        ports:
#            - "8989:3306"
#        volumes:
#            - "./data/db/mysql:/var/lib/mysql"
#            - "./config/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro"

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                -
                    subnet: 192.100.10.0/24
                    gateway: 192.100.10.1
