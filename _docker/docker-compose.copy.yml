version: '2'
services:
    web:
        container_name: web
        image: web/nginx
        build:
            context: ./containers/nginx/
            dockerfile: Dockerfile
#        env_file:
#            - ".env"
#        volumes:
#            - "../application:/var/www/html"
#            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
#        networks:
#            default:
#                ipv4_address: 192.100.10.20
#        extra_hosts:
#            - "web1.develop:192.100.10.20"
#        environment:
#            - NGINX_HOST=${NGINX_HOST}
#        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
#            - mysqldb

    web1:
        container_name: web1
        image: web/nginx
        env_file:
            - ".env"
        volumes:
            - "../Context1:/var/www/html"
            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        networks:
            default:
                ipv4_address: 192.100.10.20
        extra_hosts:
            - "web1.develop:192.100.10.20"
        environment:
            - NGINX_HOST=${NGINX_HOST1}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - web
            - php1

    web2:
        container_name: web2
        image: web/nginx
        env_file:
            - ".env"
        volumes:
            - "../Context2:/var/www/html"
            - "./config/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        networks:
            default:
                ipv4_address: 192.100.10.30
        extra_hosts:
            - "web2.develop:192.100.10.30"
        environment:
            - NGINX_HOST=${NGINX_HOST2}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - web
            - php2

    php:
        container_name: php
        image: web/php
        build:
            context: ./containers/php/
            dockerfile: Dockerfile
        env_file:
            - ".env"
        restart: always
        extra_hosts:
            - "web1.develop:192.100.10.20"
            - "web2.develop:192.100.10.30"
#        volumes:
#            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
#            - "../application:/var/www/html"

    php1:
        container_name: php1
        image: web/php
#        extra_hosts:
#            - "web1.develop:192.100.10.20"
#            - "web2.develop:192.100.10.30"
        volumes:
            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "../Context1:/var/www/html"
        depends_on:
            - php

    php2:
        container_name: php2
        image: web/php
#        extra_hosts:
#            - "web1.develop:192.100.10.20"
#            - "web2.develop:192.100.10.30"
        volumes:
            - "./config/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "../Context2:/var/www/html"
        depends_on:
            - php

#    application:
#        container_name: application
#        image: web1/application
#        build:
#            context: ./containers/application/
#            dockerfile: Dockerfile
#        volumes:
#            - "../application:/var/www/html"
#        command: folders.sh
#        depends_on:
#            - php
#            - web1
#            - composer

#    composer:
#        container_name: composer
#        image: "composer"
#        env_file:
#            - ".env"
#        volumes:
#            - "../CategoriesContext:/app"
#        command: install

#    myadmin:
#        container_name: myadmin
#        image: phpmyadmin/phpmyadmin
#        container_name: phpmyadmin
#        ports:
#            - "8080:80"
#        environment:
#            - PMA_ARBITRARY=1
#            - PMA_HOST=${MYSQL_HOST}
#        restart: always
#        depends_on:
#            - mysqldb

#    mysqldb:
#        container_name: mysql
#        image: mysql
#        container_name: ${MYSQL_HOST}
#        restart: always
#        env_file:
#            - ".env"
#        environment:
#            - MYSQL_DATABASE=${MYSQL_DATABASE}
#            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#            - MYSQL_USER=${MYSQL_USER}
#            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#        ports:
#            - "8989:3306"
#        volumes:
#            - "./data/db/mysql:/var/lib/mysql"
#            - "./config/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro"

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                -
                    subnet: 192.100.10.0/24
                    gateway: 192.100.10.1
